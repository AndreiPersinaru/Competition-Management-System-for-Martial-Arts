from ..models import Categorie

def populate_categorii_standard(proba):
    categorii_data = {
        (6, 7): {
            "F": ["-18", "-21", "-24", "-27", "-30", "-33", "-36", "-39", "-42", "-45", "+45"],
            "M": ["-18", "-21", "-24", "-27", "-30", "-33", "-36", "-39", "-42", "-45", "+45"],
        },
        (8, 9): {
            "F": ["-18", "-21", "-24", "-27", "-30", "-33", "-36", "-39", "-42", "-45", "+45"],
            "M": ["-18", "-21", "-24", "-27", "-30", "-33", "-36", "-39", "-42", "-45", "+45"],
        },
        (10, 11): {
            "F": ["-21", "-24", "-27", "-30", "-34", "-38", "-42", "-46", "-52", "-60", "+60"],
            "M": ["-21", "-24", "-27", "-30", "-34", "-38", "-42", "-46", "-52", "-60", "+60"],
        },
        (12, 14): {
            "F": ["-32", "-36", "-40", "-44", "-48", "-52", "-57", "-63", "+63"],
            "M": ["-34", "-37", "-41", "-45", "-50", "-55", "-60", "-66", "+66"],
        },
        (15, 17): {
            "F": ["-44", "-48", "-52", "-57", "-63", "-70", "+70"],
            "M": ["-46", "-50", "-55", "-60", "-66", "-73", "-81", "+81"],
        },
        (18, 20): {
            "F": ["-48", "-52", "-57", "-63", "-70", "-78", "+78"],
            "M": ["-56", "-62", "-69", "-77", "-85", "-95", "+95"],
        },
        (21, 34): {
            "F": ["-48", "-52", "-57", "-63", "-70", "-78", "+78"],
            "M": ["-56", "-62", "-69", "-77", "-85", "-95", "-105", "+105"],
        },
        (35, 100): {
            "F": ["-48", "-52", "-57", "-63", "-70", "-78", "+78"],
            "M": ["-56", "-62", "-69", "-77", "-85", "-95", "-105", "+105"],
        },
    }

    probe_fara_greutate = ["Polydamas", "Palaismata"]

    if any(p.lower() in proba.nume.lower() for p in probe_fara_greutate):
        for age_range in categorii_data.keys():
            Categorie.objects.get_or_create(
                proba=proba,
                varsta_min=age_range[0],
                varsta_max=age_range[1],
            )
    else:
        for age_range, greutati_per_sex in categorii_data.items():
            for sex, greutati in greutati_per_sex.items():
                for g in greutati:
                    Categorie.objects.get_or_create(
                        proba=proba,
                        sex=sex,
                        varsta_min=age_range[0],
                        varsta_max=age_range[1],
                        categorie_greutate=g,
                    )